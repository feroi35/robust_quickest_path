# TODO et Carnet de bord


## TODO

- Résolution des sous-problèmes, c'est tellement overkill de résoudre le MILP
Si l'on trie au début les D et les poids des villes, il suffit de donner le plus gros coefficient aux premières villes/ aux premiers arcs. 
On va l'appeler en callback, donc c'est important que ce soit rapide. Appeler CPLEX, rien que l'interface, j'imagine que ça prend du temps alors que le problème est hyper simple à résoudre sans l'appeler. 
- Faire les outils graphiques. Nombre d'instances résolus par rapport au temps de résolution
- creuser pourquoi CPLEX trouve autant de symmétries dans la résolution dualized
- coder les plans coupants
- coder la résolution CallBack
- réfléchir et implémenter une heuristique
- modifier les callBack, ne pas appeler CPLEX, résoudre de manière heuristique (knapsack continu)

## 04.01

Certaines instances crashent lors de la résolution statique: 

Quelques examples:

Running file: data/processed/1200_USA-road-d.COL.gr
Concert exception caught: CPLEX Error  1217: No solution exists.

Running file: data/processed/1500_USA-road-d.BAY.gr
Concert exception caught: CPLEX Error  1217: No solution exists.

Running file: data/processed/1500_USA-road-d.NY.gr
Concert exception caught: CPLEX Error  1217: No solution exists.

## 06.01

Pas de crash. Pas de solution existe car CPLEX n'avait pas eu le temps d'en trouver une.
Si on laisse tourner + de 10s, ça va.
Fixer une limite max de temps, 1 minute ?

## 17.01

Sur certaines grosses instances: linux kills le programme avec la méthode dualisée
Pas de message d'erreur, simplement : 
./run.sh: line 20:  2414 Killed                  ./myprogram "$file" "$method" "$verbose"

Mais si on creuse en affichant **dmesg**, on obtient:
Out of memory: Killed process 2576 (myprogram) total-vm:3771096kB, anon-rss:3110692kB, file-rss:4kB, shmem-rss:0kB, UID:1000 pgtables:6396kB oom_score_adj:0
Problème: c'est lorsqu'on utilise cplex que le programme meurt. Il arrive bien à se build avant...

https://www.ibm.com/support/pages/diagnosing-cplex-error-1001-out-memory
For some reason, cplex ne ressort pas l'erreur 1001, linux le tue avant
Contacter cplex ?

ulimit -a
max locked memory           (kbytes, -l) 65536
max memory size             (kbytes, -m) unlimited

max locked memory
The maximum size that may be locked into memory. Memory locking ensures the memory is always in RAM and never moved to the swap disk.

Quand on exporte le problème en .lp, on peut exécuter le model.lp depuis cplex lancé depuis Windows.
Donc lié à un problème de mémoire sur le WSL

Remarque: on obtient les warnings suivants:
Warning, line 1755417: Name 'x_0_0#235978' does not exist.

J'imagine que ce warning apparait pour toutes les variables qui sont "créées" mais jamais utilisées dans les contraintes ou l'objectif
c'est à dire, les variables qui représentent des arcs qui n'existent pas.

Dans mon fichier .wslconfig, 
j'avais memory = 4Gb
Quand j'enlève cette ligne, Cplex arrive à presolve le problème, ce qu'il ne faisait pas avant. Mais crash après trouver sa première solution

Out of memory: Killed process 1443 (myprogram) total-vm:3981856kB, anon-rss:3086536kB, file-rss:4kB, shmem-rss:0kB, UID:1000 pgtables:7136kB oom_score_adj:0

Essayons d'abord de modifier le problème pour que moins de mémoire soit prise. 
Pas besoin de stocker un vecteur de vecteurs entier remplis à moitié de NaN, il faut faire ça de manière intelligente.

- 1. Stocker un vecteur de vecteurs de vecteurs d'arc entrants et un vecteur de vecteurs d'arcs sortants. On stocke ainsi uniquement ce dont on a besoin.
- 2. (à tester) Virer env de la création de l'instance. C'est absurde comme manière de faire. De +, ça peut poser des problèmes lors de la résolution de sous-problèmes lors de l'algo des plans coupants. 

## 19.01

Résolution des sous-problèmes, c'est tellement overkill de résoudre le MILP
Si l'on trie au début les D et les poids des villes, il suffit de donner le plus gros coefficient aux premières villes/ aux premiers arcs. 

 data/processed/100_USA-road-d.COL.gr
 La contrainte robuste est plus faible que la contrainte statique (poids des villes additionné), pas possible. 
 A débugger. 
Faire attention aux décalages de 1. Indexation des instances commence à 1. Problème réglé.


En faisant tourner le modèle statique sur toutes les instances:

Running file: data/processed/2100_USA-road-d.COL.gr, 56 / 123
Advanced basis not built.
Advanced basis not built.

Running file: data/processed/2300_USA-road-d.COL.gr, 62 / 123
Advanced basis not built.
Concert exception caught: CPLEX Error  1217: No solution exists.
-> Simplement pas assez de temps donné, elle est énervée cette instance. Mais gestion des erreurs revues pour ne pas avoir d'incohérences comme cella là. 

## 21.01

Dans la version dualized avec les arcs, 
lambda était un BoolVarArray au lieu d'être un NumVarArray
-> corrigé

Problème de dualized.
Detecting symmetries...
Elapsed time for symmetry detection = 82.89 sec. (10000.42 ticks)
Found 2.310657e+347 symmetric permutations.

Comment est-ce qu'il peut détecter autant de symmétries ?
A creuser pour améliorer la résolution

Running file: data/processed/1000_USA-road-d.COL.gr, 2/123
Advanced basis not built.

Que signifie "Advanced basis not built" ?


## 23.01 r
error run_all dualized:
1800_COL, 2200_COL, 2200_NY, 2500_COL: mismatch robust_cost cplex_cost ; 
2100_NY: using missing arc;
2300_COL: advance basis not built + robust cost and cplex_cost mismatch;
2400_COL: no solution found;

